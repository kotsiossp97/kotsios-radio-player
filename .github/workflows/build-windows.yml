name: Build Windows Electron App

on:
  push:
    paths:
      - "package.json" # Trigger the workflow when package.json changes (e.g., version update)

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22 # Ensure compatibility with your project

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the Electron app
      - name: Build Electron app for Windows
        run: npm run build:win

      # Get the version build (Windows-compatible)
      - name: Get version from package.json
        id: get_version
        run: |
          $version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
          Write-Host "Detected Version: $version"
          "version=$version" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        shell: pwsh

      # Create a Git tag for the version build
      - name: Create Git tag
        id: get_tag
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          VERSION="v${{ steps.get_version.outputs.version}}"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"

      # Create a GitHub release and attach artifacts
      - name: Create GitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Release of version ${{ steps.get_version.outputs.version }}.
          draft: false
          prerelease: false

      - name: Upload build artifacts to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.exe
          asset_name: windows-build.exe
          asset_content_type: application/vnd.microsoft.portable-executable
